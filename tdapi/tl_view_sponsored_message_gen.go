// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// ViewSponsoredMessageRequest represents TL type `viewSponsoredMessage#463a997b`.
type ViewSponsoredMessageRequest struct {
	// Identifier of the chat with the sponsored message
	ChatID int64
	// The identifier of the sponsored message being viewed
	SponsoredMessageID int32
}

// ViewSponsoredMessageRequestTypeID is TL type id of ViewSponsoredMessageRequest.
const ViewSponsoredMessageRequestTypeID = 0x463a997b

// Ensuring interfaces in compile-time for ViewSponsoredMessageRequest.
var (
	_ bin.Encoder     = &ViewSponsoredMessageRequest{}
	_ bin.Decoder     = &ViewSponsoredMessageRequest{}
	_ bin.BareEncoder = &ViewSponsoredMessageRequest{}
	_ bin.BareDecoder = &ViewSponsoredMessageRequest{}
)

func (v *ViewSponsoredMessageRequest) Zero() bool {
	if v == nil {
		return true
	}
	if !(v.ChatID == 0) {
		return false
	}
	if !(v.SponsoredMessageID == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (v *ViewSponsoredMessageRequest) String() string {
	if v == nil {
		return "ViewSponsoredMessageRequest(nil)"
	}
	type Alias ViewSponsoredMessageRequest
	return fmt.Sprintf("ViewSponsoredMessageRequest%+v", Alias(*v))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*ViewSponsoredMessageRequest) TypeID() uint32 {
	return ViewSponsoredMessageRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*ViewSponsoredMessageRequest) TypeName() string {
	return "viewSponsoredMessage"
}

// TypeInfo returns info about TL type.
func (v *ViewSponsoredMessageRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "viewSponsoredMessage",
		ID:   ViewSponsoredMessageRequestTypeID,
	}
	if v == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "ChatID",
			SchemaName: "chat_id",
		},
		{
			Name:       "SponsoredMessageID",
			SchemaName: "sponsored_message_id",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (v *ViewSponsoredMessageRequest) Encode(b *bin.Buffer) error {
	if v == nil {
		return fmt.Errorf("can't encode viewSponsoredMessage#463a997b as nil")
	}
	b.PutID(ViewSponsoredMessageRequestTypeID)
	return v.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (v *ViewSponsoredMessageRequest) EncodeBare(b *bin.Buffer) error {
	if v == nil {
		return fmt.Errorf("can't encode viewSponsoredMessage#463a997b as nil")
	}
	b.PutLong(v.ChatID)
	b.PutInt32(v.SponsoredMessageID)
	return nil
}

// Decode implements bin.Decoder.
func (v *ViewSponsoredMessageRequest) Decode(b *bin.Buffer) error {
	if v == nil {
		return fmt.Errorf("can't decode viewSponsoredMessage#463a997b to nil")
	}
	if err := b.ConsumeID(ViewSponsoredMessageRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode viewSponsoredMessage#463a997b: %w", err)
	}
	return v.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (v *ViewSponsoredMessageRequest) DecodeBare(b *bin.Buffer) error {
	if v == nil {
		return fmt.Errorf("can't decode viewSponsoredMessage#463a997b to nil")
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode viewSponsoredMessage#463a997b: field chat_id: %w", err)
		}
		v.ChatID = value
	}
	{
		value, err := b.Int32()
		if err != nil {
			return fmt.Errorf("unable to decode viewSponsoredMessage#463a997b: field sponsored_message_id: %w", err)
		}
		v.SponsoredMessageID = value
	}
	return nil
}

// EncodeTDLibJSON implements tdjson.TDLibEncoder.
func (v *ViewSponsoredMessageRequest) EncodeTDLibJSON(b tdjson.Encoder) error {
	if v == nil {
		return fmt.Errorf("can't encode viewSponsoredMessage#463a997b as nil")
	}
	b.ObjStart()
	b.PutID("viewSponsoredMessage")
	b.FieldStart("chat_id")
	b.PutLong(v.ChatID)
	b.FieldStart("sponsored_message_id")
	b.PutInt32(v.SponsoredMessageID)
	b.ObjEnd()
	return nil
}

// DecodeTDLibJSON implements tdjson.TDLibDecoder.
func (v *ViewSponsoredMessageRequest) DecodeTDLibJSON(b tdjson.Decoder) error {
	if v == nil {
		return fmt.Errorf("can't decode viewSponsoredMessage#463a997b to nil")
	}

	return b.Obj(func(b tdjson.Decoder, key []byte) error {
		switch string(key) {
		case tdjson.TypeField:
			if err := b.ConsumeID("viewSponsoredMessage"); err != nil {
				return fmt.Errorf("unable to decode viewSponsoredMessage#463a997b: %w", err)
			}
		case "chat_id":
			value, err := b.Long()
			if err != nil {
				return fmt.Errorf("unable to decode viewSponsoredMessage#463a997b: field chat_id: %w", err)
			}
			v.ChatID = value
		case "sponsored_message_id":
			value, err := b.Int32()
			if err != nil {
				return fmt.Errorf("unable to decode viewSponsoredMessage#463a997b: field sponsored_message_id: %w", err)
			}
			v.SponsoredMessageID = value
		default:
			return b.Skip()
		}
		return nil
	})
}

// GetChatID returns value of ChatID field.
func (v *ViewSponsoredMessageRequest) GetChatID() (value int64) {
	return v.ChatID
}

// GetSponsoredMessageID returns value of SponsoredMessageID field.
func (v *ViewSponsoredMessageRequest) GetSponsoredMessageID() (value int32) {
	return v.SponsoredMessageID
}

// ViewSponsoredMessage invokes method viewSponsoredMessage#463a997b returning error if any.
func (c *Client) ViewSponsoredMessage(ctx context.Context, request *ViewSponsoredMessageRequest) error {
	var ok Ok

	if err := c.rpc.Invoke(ctx, request, &ok); err != nil {
		return err
	}
	return nil
}
