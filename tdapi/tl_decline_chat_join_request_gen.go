// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// DeclineChatJoinRequestRequest represents TL type `declineChatJoinRequest#70411b66`.
type DeclineChatJoinRequestRequest struct {
	// Chat identifier
	ChatID int64
	// Identifier of the user, which request will be declined
	UserID int64
}

// DeclineChatJoinRequestRequestTypeID is TL type id of DeclineChatJoinRequestRequest.
const DeclineChatJoinRequestRequestTypeID = 0x70411b66

// Ensuring interfaces in compile-time for DeclineChatJoinRequestRequest.
var (
	_ bin.Encoder     = &DeclineChatJoinRequestRequest{}
	_ bin.Decoder     = &DeclineChatJoinRequestRequest{}
	_ bin.BareEncoder = &DeclineChatJoinRequestRequest{}
	_ bin.BareDecoder = &DeclineChatJoinRequestRequest{}
)

func (d *DeclineChatJoinRequestRequest) Zero() bool {
	if d == nil {
		return true
	}
	if !(d.ChatID == 0) {
		return false
	}
	if !(d.UserID == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (d *DeclineChatJoinRequestRequest) String() string {
	if d == nil {
		return "DeclineChatJoinRequestRequest(nil)"
	}
	type Alias DeclineChatJoinRequestRequest
	return fmt.Sprintf("DeclineChatJoinRequestRequest%+v", Alias(*d))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*DeclineChatJoinRequestRequest) TypeID() uint32 {
	return DeclineChatJoinRequestRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*DeclineChatJoinRequestRequest) TypeName() string {
	return "declineChatJoinRequest"
}

// TypeInfo returns info about TL type.
func (d *DeclineChatJoinRequestRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "declineChatJoinRequest",
		ID:   DeclineChatJoinRequestRequestTypeID,
	}
	if d == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "ChatID",
			SchemaName: "chat_id",
		},
		{
			Name:       "UserID",
			SchemaName: "user_id",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (d *DeclineChatJoinRequestRequest) Encode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode declineChatJoinRequest#70411b66 as nil")
	}
	b.PutID(DeclineChatJoinRequestRequestTypeID)
	return d.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (d *DeclineChatJoinRequestRequest) EncodeBare(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't encode declineChatJoinRequest#70411b66 as nil")
	}
	b.PutLong(d.ChatID)
	b.PutLong(d.UserID)
	return nil
}

// Decode implements bin.Decoder.
func (d *DeclineChatJoinRequestRequest) Decode(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode declineChatJoinRequest#70411b66 to nil")
	}
	if err := b.ConsumeID(DeclineChatJoinRequestRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode declineChatJoinRequest#70411b66: %w", err)
	}
	return d.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (d *DeclineChatJoinRequestRequest) DecodeBare(b *bin.Buffer) error {
	if d == nil {
		return fmt.Errorf("can't decode declineChatJoinRequest#70411b66 to nil")
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode declineChatJoinRequest#70411b66: field chat_id: %w", err)
		}
		d.ChatID = value
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode declineChatJoinRequest#70411b66: field user_id: %w", err)
		}
		d.UserID = value
	}
	return nil
}

// EncodeTDLibJSON implements tdjson.TDLibEncoder.
func (d *DeclineChatJoinRequestRequest) EncodeTDLibJSON(b tdjson.Encoder) error {
	if d == nil {
		return fmt.Errorf("can't encode declineChatJoinRequest#70411b66 as nil")
	}
	b.ObjStart()
	b.PutID("declineChatJoinRequest")
	b.FieldStart("chat_id")
	b.PutLong(d.ChatID)
	b.FieldStart("user_id")
	b.PutLong(d.UserID)
	b.ObjEnd()
	return nil
}

// DecodeTDLibJSON implements tdjson.TDLibDecoder.
func (d *DeclineChatJoinRequestRequest) DecodeTDLibJSON(b tdjson.Decoder) error {
	if d == nil {
		return fmt.Errorf("can't decode declineChatJoinRequest#70411b66 to nil")
	}

	return b.Obj(func(b tdjson.Decoder, key []byte) error {
		switch string(key) {
		case tdjson.TypeField:
			if err := b.ConsumeID("declineChatJoinRequest"); err != nil {
				return fmt.Errorf("unable to decode declineChatJoinRequest#70411b66: %w", err)
			}
		case "chat_id":
			value, err := b.Long()
			if err != nil {
				return fmt.Errorf("unable to decode declineChatJoinRequest#70411b66: field chat_id: %w", err)
			}
			d.ChatID = value
		case "user_id":
			value, err := b.Long()
			if err != nil {
				return fmt.Errorf("unable to decode declineChatJoinRequest#70411b66: field user_id: %w", err)
			}
			d.UserID = value
		default:
			return b.Skip()
		}
		return nil
	})
}

// GetChatID returns value of ChatID field.
func (d *DeclineChatJoinRequestRequest) GetChatID() (value int64) {
	return d.ChatID
}

// GetUserID returns value of UserID field.
func (d *DeclineChatJoinRequestRequest) GetUserID() (value int64) {
	return d.UserID
}

// DeclineChatJoinRequest invokes method declineChatJoinRequest#70411b66 returning error if any.
func (c *Client) DeclineChatJoinRequest(ctx context.Context, request *DeclineChatJoinRequestRequest) error {
	var ok Ok

	if err := c.rpc.Invoke(ctx, request, &ok); err != nil {
		return err
	}
	return nil
}
